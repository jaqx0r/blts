module(name = "blts")

bazel_dep(name = "rules_go", version = "0.53.0")
bazel_dep(name = "gazelle", version = "0.42.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.23.1")

# https://github.com/bazel-contrib/rules_go/blob/master/go/nogo.rst
# Like golangci-lint, but integrated into the build.
go_sdk.nogo(nogo = "//:nogo")

# Update dependencies with
# `bazel run //:gazelle`.
# and then
# `bazel run @rules_go//go -- mod tidy`
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_docker_docker",
    "com_github_google_go_containerregistry",
    "com_github_openzipkin_zipkin_go",
    "com_github_prometheus_client_golang",
    "com_github_testcontainers_testcontainers_go",
    "com_github_tsenart_vegeta",
    "io_opencensus_go",
    "io_opencensus_go_contrib_exporter_prometheus",
    "io_opencensus_go_contrib_exporter_zipkin",
)

# `rules_oci` and `aspect_bazel_lib`'s `tar` for making container images.
bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")
bazel_dep(name = "rules_oci", version = "2.2.3")
bazel_dep(name = "platforms", version = "0.0.11")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:125eb09bbd8e818da4f9eac0dfc373892ca75bec4630aa642d315ecf35c1afb7",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64_v8")
